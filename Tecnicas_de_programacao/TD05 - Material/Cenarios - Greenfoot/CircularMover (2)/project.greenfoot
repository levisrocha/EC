#Greenfoot properties
#Sun Jul 05 19:09:39 WIT 2009
target4.type=ClassTarget
dependency3.from=MyWorld
target3.height=62
target5.height=50
dependency3.type=UsesDependency
publish.tags=demo simulation reusable actor class circular circularmover vector with-source 
target1.editor.y=30
target1.editor.x=5
target4.name=Vector
target1.height=50
target5.type=ClassTarget
mainWindow.width=862
target2.width=80
target3.editor.y=33
target3.editor.x=5
publish.shortDesc=A reusable class to move actor in circular path (using vector)
target5.name=MyWorld
target5.editor.width=754
target5.editor.y=47
target5.editor.x=191
version=2.0.1
publish.longDesc=Click on empty space to add more flies.\n\nThis is a reusable actor class - CircularMover, that I will use in my DominoFall scenario,\nwhich might be useful for your scenario.\n\nThis CircularMover class is adapted from SmoothMover class ver2.0 \nfrom Michael Kolling's Marbles scenario.\nThis CircularMover class is using Poul Henriksen & Michael Kolling's Vector class ver2.0\n\nHow to use\: \n(see the source code for more detail)\n    Create an actor as a subclass of (extends) CircularMover.\n    Set the radius of the circular path - setCR(double CIR_RAD).\n    Set the actor initial rotation - setRotation(int iRot).\n    Call moveCir() method from the actor act() method.\n    Set acceleration/deceleration - accelerate(double DECEL).\n    Apply a linear force - addForce(Vector vForce).\n    Start moving the actor - setMoving(boolean true).\n
target4.editor.height=518
class.Fly.superclass=CircularMover
dependency1.to=Vector
target2.editor.height=518
dependency2.to=LightBulb
target1.width=110
dependency3.to=Fly
target3.showInterface=false
class.Fly.image=fly_01.png
class.Vector.superclass=
target1.showInterface=false
target4.editor.width=620
target5.showInterface=false
publish.url=
package.numTargets=5
target1.type=AbstractTarget
target2.editor.y=113
target2.height=50
target2.editor.x=98
target4.height=50
target5.y=10
target5.x=160
target1.name=CircularMover
target4.y=90
target4.x=10
class.Actor.superclass=
publish.locked=false
target3.editor.width=824
target3.y=10
publish.hasSource=true
target3.x=60
target2.type=ClassTarget
target2.y=130
target2.x=100
class.MyWorld.superclass=greenfoot.World
mainWindow.y=6
mainWindow.x=39
dependency1.from=LightBulb
target5.width=80
target1.y=70
target1.x=160
target2.editor.width=824
dependency1.type=UsesDependency
target4.editor.y=6
target1.editor.height=518
target4.editor.x=0
target2.name=LightBulb
target5.editor.height=678
package.numDependencies=2
publish.title=CircularMover
target3.editor.height=518
class.CircularMover.superclass=greenfoot.Actor
target3.type=PackageTarget
target4.width=80
dependency2.from=MyWorld
dependency2.type=UsesDependency
class.World.superclass=
world.lastInstantiated=MyWorld
mainWindow.height=756
target2.showInterface=false
target3.name=greenfoot
target1.editor.width=620
target3.width=90
class.MyWorld.image=cell.jpg
target4.showInterface=false
